#include <bits/stdc++.h>
#include <vector>
using namespace std;

void merge(vector<int> nums, int low,int mid,int high){
    int n1=mid-low+1;
    int n2=high-mid;
    vector<int> L;
    vector<int> M;
    for(int i=0;i<n1;i++){
        L.push_back(nums[low+i]);
    }
    for(int j=0;j<n2;j++){
        M.push_back(nums[mid+1+j]);
    }
    int i=0,j=0;
    while(i<n1 and j<n2){
        if(L[i]<=M[j]){
            nums.push_back(L[i]);
            i++;
        }
        else{
            nums.push_back(M[j]);
            j++;
        }
    }
    while(i<n1){
        nums.push_back(L[i]);
        i++;
    }
    while(j<n2){
        nums.push_back(M[j]);
        j++;
    }
}

void mergesort(vector<int> nums, int low, int high){
    if(low<high){
        int mid=low+(high-low)/2;
        mergesort(nums,low,mid);
        mergesort(nums,mid+1,high);
        merge(nums,low,mid,high);
    }
}

int main() {
	// your code goes here
	vector<int> nums={5,4,3,2,1};
	mergesort(nums,0,nums.size()-1);
	for(int i=0;i<nums.size();i++){
	    cout<<nums[i]<<" ";
	}
	return 0;
}
