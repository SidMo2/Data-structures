class Solution {
public:
    int max_ele(vector<int> &weights){
        int ans=INT_MIN;
        int n=weights.size();
        for(int i=0;i<weights.size();i++){
            ans=max(ans,weights[i]);
        }
        return ans;
    }
    int sum_ele(vector<int> &weights){
        int sum=0;
        int n=weights.size();
        for(int i=0;i<n;i++){
            sum+=weights[i];
        }
        return sum;
    }
    bool isValid(vector<int> &weights,int n,int days,int mid){
        int day=1,sum=0;
        for(int i=0;i<n;i++){
            sum+=weights[i];
            if(sum>mid){
                day++;
                sum=weights[i];
            }
            if(day>days)
                return false;
        } 
        return true;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int start=max_ele(weights);
        int end=sum_ele(weights);
        int ans=-1;
        int n=weights.size();
        while(start<=end){
            int mid=start+(end-start)/2;
            if(isValid(weights,n,days,mid)){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return ans;
    }
};
